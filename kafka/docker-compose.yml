services:
  localstack:
    image: localstack/localstack
    environment:
      - SERVICES=s3
      - DOCKER_HOST=unix:///var/run/docker.sock
    ports:
      - 4566:4566
  kafka:
    image: bitnami/kafka:3.2
    command:
      - 'sh'
      - '-c'
      - '/opt/bitnami/scripts/kafka/setup.sh && kafka-storage.sh format --config "$${KAFKA_CONF_FILE}" --cluster-id "lkorDA4qT6W1K_dk0LHvtg" --ignore-formatted  && /opt/bitnami/scripts/kafka/run.sh' # Kraft specific initialise
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      # Start Kraft Setup (Kafka as Controller - no Zookeeper)
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LOG_DIRS=/tmp/logs
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      # End Kraft Specific Setup
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://196.168.1.116:9092
    ports:
      - 0.0.0.0:9092:9092
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 3030:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: host.docker.internal:9092
      KAFKA_CLUSTERS_0_JMXPORT: 9997
#      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
#      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: connect
#      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
#      KAFKA_CLUSTERS_0_KSQLDBSERVER: ksqldb:8088